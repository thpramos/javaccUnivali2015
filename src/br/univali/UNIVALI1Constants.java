/* Generated By:JavaCC: Do not edit this line. UNIVALI1Constants.java */
package br.univali;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface UNIVALI1Constants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COMMENT = 5;
  /** RegularExpression Id. */
  int COMMENT_BLOCK = 6;
  /** RegularExpression Id. */
  int LEXICAL_INVALIDO = 7;
  /** RegularExpression Id. */
  int IDENTIFICADOR_INVALIDO = 8;
  /** RegularExpression Id. */
  int CONSTANTE_INVALIDA = 9;
  /** RegularExpression Id. */
  int CONSTANTE_NUMERICA_INTEIRA = 10;
  /** RegularExpression Id. */
  int CONSTANTE_NUMERICA_REAL = 11;
  /** RegularExpression Id. */
  int LETTER = 12;
  /** RegularExpression Id. */
  int DIGIT = 13;
  /** RegularExpression Id. */
  int EXPRESSAO_REGULAR = 14;
  /** RegularExpression Id. */
  int SIMBOLOS = 15;
  /** RegularExpression Id. */
  int DO = 16;
  /** RegularExpression Id. */
  int THIS = 17;
  /** RegularExpression Id. */
  int BODY = 18;
  /** RegularExpression Id. */
  int SECTION = 19;
  /** RegularExpression Id. */
  int DESCRIPTION = 20;
  /** RegularExpression Id. */
  int DECLARATION = 21;
  /** RegularExpression Id. */
  int DESIGNATE = 22;
  /** RegularExpression Id. */
  int AS = 23;
  /** RegularExpression Id. */
  int TO = 24;
  /** RegularExpression Id. */
  int READ = 25;
  /** RegularExpression Id. */
  int WRITE = 26;
  /** RegularExpression Id. */
  int AVALIATE = 27;
  /** RegularExpression Id. */
  int TRUE = 28;
  /** RegularExpression Id. */
  int UNTRUE = 29;
  /** RegularExpression Id. */
  int RESULT = 30;
  /** RegularExpression Id. */
  int REPEAT = 31;
  /** RegularExpression Id. */
  int VIRGULA = 32;
  /** RegularExpression Id. */
  int ALL = 33;
  /** RegularExpression Id. */
  int CONSTANT = 34;
  /** RegularExpression Id. */
  int VARIABLE = 35;
  /** RegularExpression Id. */
  int IS = 36;
  /** RegularExpression Id. */
  int TIPO = 37;
  /** RegularExpression Id. */
  int VALOR = 38;
  /** RegularExpression Id. */
  int INTEGER = 39;
  /** RegularExpression Id. */
  int STRING = 40;
  /** RegularExpression Id. */
  int FLOAT = 41;
  /** RegularExpression Id. */
  int BOOLEAN = 42;
  /** RegularExpression Id. */
  int CONCHETEE = 43;
  /** RegularExpression Id. */
  int CONCHETED = 44;
  /** RegularExpression Id. */
  int PARENTESEE = 45;
  /** RegularExpression Id. */
  int PARENTESED = 46;
  /** RegularExpression Id. */
  int PONTO = 47;
  /** RegularExpression Id. */
  int IGUAL = 48;
  /** RegularExpression Id. */
  int CONSTANTE_LITERAL = 49;
  /** RegularExpression Id. */
  int LETTERM = 50;
  /** RegularExpression Id. */
  int IDENTIFICADOR = 51;
  /** RegularExpression Id. */
  int ID = 52;
  /** RegularExpression Id. */
  int UNDER = 53;
  /** RegularExpression Id. */
  int OPERADOR = 54;
  /** RegularExpression Id. */
  int OPERADOR_ARITMETICO = 55;
  /** RegularExpression Id. */
  int OPERADOR_RELACIONAL = 56;
  /** RegularExpression Id. */
  int OPERADOR_LOGICO = 57;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "<COMMENT>",
    "<COMMENT_BLOCK>",
    "<LEXICAL_INVALIDO>",
    "<IDENTIFICADOR_INVALIDO>",
    "<CONSTANTE_INVALIDA>",
    "<CONSTANTE_NUMERICA_INTEIRA>",
    "<CONSTANTE_NUMERICA_REAL>",
    "<LETTER>",
    "<DIGIT>",
    "<EXPRESSAO_REGULAR>",
    "<SIMBOLOS>",
    "\"do\"",
    "\"this\"",
    "\"body\"",
    "\"section\"",
    "\"description\"",
    "\"declaration\"",
    "\"designate\"",
    "\"as\"",
    "\"to\"",
    "\"read\"",
    "\"write\"",
    "\"avaliate\"",
    "\"true\"",
    "\"untrue\"",
    "\"result\"",
    "\"repeat\"",
    "\",\"",
    "\"all\"",
    "\"constant\"",
    "\"variable\"",
    "\"is\"",
    "<TIPO>",
    "<VALOR>",
    "\"integer\"",
    "\"string\"",
    "\"float\"",
    "\"boolean\"",
    "\"[\"",
    "\"]\"",
    "\"(\"",
    "\")\"",
    "\".\"",
    "\"=\"",
    "<CONSTANTE_LITERAL>",
    "<LETTERM>",
    "<IDENTIFICADOR>",
    "<ID>",
    "<UNDER>",
    "<OPERADOR>",
    "<OPERADOR_ARITMETICO>",
    "<OPERADOR_RELACIONAL>",
    "<OPERADOR_LOGICO>",
  };

}
